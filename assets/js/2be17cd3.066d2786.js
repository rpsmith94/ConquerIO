"use strict";(self.webpackChunkquant_docs=self.webpackChunkquant_docs||[]).push([[515],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var u=r.createContext({}),l=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=l(t.components);return r.createElement(u.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,u=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),p=l(n),f=o,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,a(a({ref:e},s),{},{components:n})):r.createElement(m,a({ref:e},s))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=t,c[p]="string"==typeof t?t:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3342:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={id:"continuous-integration",title:"Using Quant with CI",sidebar_label:"CI pipelines"},u=void 0,l={unversionedId:"cli/continuous-integration",id:"cli/continuous-integration",title:"Using Quant with CI",description:"CI integration is a key area the CLI tool can assist with. When using a static generator your CI pipeline can be used to build and deploy content automatically as it changes.",source:"@site/docs/cli/continuous-integration.md",sourceDirName:"cli",slug:"/cli/continuous-integration",permalink:"/ConquerIO/docs/cli/continuous-integration",draft:!1,editUrl:"https://github.com/quantcdn/docs/tree/develop/docs/cli/continuous-integration.md",tags:[],version:"current",frontMatter:{id:"continuous-integration",title:"Using Quant with CI",sidebar_label:"CI pipelines"},sidebar:"someSidebar",previous:{title:"Crawl and migrate",permalink:"/ConquerIO/docs/cli/crawler"},next:{title:"Get started (Content)",permalink:"/ConquerIO/docs/api/get-started-content"}},s={},p=[],d={toc:p},f="wrapper";function m(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)(f,(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"CI integration is a key area the CLI tool can assist with. When using a static generator your CI pipeline can be used to build and deploy content automatically as it changes."),(0,i.kt)("p",null,"For example, this documentation site is built with (Docusaurus)","[https://v2.docusaurus.io/]"," and deployed to Quant via a (GitHub Actions)","[https://github.com/marketplace/actions/deploy-to-quantcdn]"," CI pipeline. You can (view the code)","[https://github.com/quantcdn/docs/blob/develop/.github/workflows/deploy.yml]"," in our public repository."),(0,i.kt)("p",null,"Simply initialize Quant with a one-liner to prevent interactive setup with environment variables, e.g:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"quant init -c ${QUANT_CUSTOMER} -t '${QUANT_TOKEN}' --project=${QUANT_PROJECT} -e 'https://api.quantcdn.io' -d ${BUILD_DIRECTORY}\n")),(0,i.kt)("p",null,"Then run a Quant deployment to push content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"quant deploy\n")))}m.isMDXComponent=!0}}]);